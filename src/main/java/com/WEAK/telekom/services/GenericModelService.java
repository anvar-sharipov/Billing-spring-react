//–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º –ø–æ–¥—Ä–æ–±–Ω–æ –≤–µ—Å—å –∫–ª–∞—Å—Å GenericModelService, —Å—Ç—Ä–æ—á–∫–∞ –∑–∞ —Å—Ç—Ä–æ—á–∫–æ–π ‚Äî –∫–∞–∫ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –¥–ª—è —á–µ–≥–æ –Ω—É–∂–µ–Ω.
//
//üì¶ –ü–∞–∫–µ—Ç –∏ –∏–º–ø–æ—Ä—Ç—ã
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//package com.WEAK.telekom.services;
//–§–∞–π–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–ø–∫–µ services, —Ç–æ –µ—Å—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–µ.
//
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//import jakarta.persistence.EntityManager;
//import jakarta.persistence.Query;
//JPA-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:
//
//EntityManager ‚Äî –æ–±—ä–µ–∫—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î –Ω–∞ –Ω–∏–∑–∫–æ–º —É—Ä–æ–≤–Ω–µ (SQL-–∑–∞–ø—Ä–æ—Å—ã, –Ω–∞—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∏ —Ç.–¥.).
//
//Query ‚Äî –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å.
//
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//import jakarta.transaction.Transactional;
//–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Ä–∞–±–æ—Ç—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏).
//
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//import lombok.RequiredArgsConstructor;
//–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º EntityManager.
//
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//import org.springframework.stereotype.Service;
//–î–µ–ª–∞–µ—Ç —ç—Ç–æ—Ç –∫–ª–∞—Å—Å Spring-—Å–µ—Ä–≤–∏—Å–æ–º, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö —Å –ø–æ–º–æ—â—å—é @Autowired –∏–ª–∏ —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä.
//
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//import java.util.List;
//import java.util.Map;
//–°—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö:
//
//List ‚Äî —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π.
//
//Map ‚Äî –æ–¥–Ω–∞ –∑–∞–ø–∏—Å—å –≤ –≤–∏–¥–µ –ø–∞—Ä—ã "–∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ".
//
//üìò –ö–ª–∞—Å—Å –∏ –ø–æ–ª–µ
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//@Service
//@RequiredArgsConstructor
//public class GenericModelService {
//–û–±—ä—è–≤–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞:
//
//@Service ‚Äî Spring –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —ç—Ç–∏–º –∫–ª–∞—Å—Å–æ–º (–∏–Ω—ä–µ–∫—Ü–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π, –∞–≤—Ç–æ—Å–æ–∑–¥–∞–Ω–∏–µ –∏ —Ç.–¥.).
//
//@RequiredArgsConstructor ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å EntityManager.
//
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//private final EntityManager entityManager;
//–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–æ–≤ –≤—Ä—É—á–Ω—É—é.
//
//üì• –ú–µ—Ç–æ–¥ findAll(String modelName)
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//public List<Map<String, Object>> findAll(String modelName) {
//    String tableName = convertToTableName(modelName);
//    Query query = entityManager.createNativeQuery("SELECT * FROM " + tableName, Map.class);
//    return query.getResultList();
//}
//üîç –ü–æ–¥—Ä–æ–±–Ω—ã–π —Ä–∞–∑–±–æ—Ä:
//
//modelName ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä: "etrap" –∏–ª–∏ "abonentservice".
//
//convertToTableName(modelName) ‚Äî –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç "abonentservice" –≤ "abonent_service" (—Å–º. –Ω–∏–∂–µ).
//
//entityManager.createNativeQuery(...) ‚Äî –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å—ã—Ä–æ–π SQL-–∑–∞–ø—Ä–æ—Å (–≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ: SELECT * FROM etrap).
//
//Map.class ‚Äî —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç –≤ –≤–∏–¥–µ Map<String, Object> (—Ç–æ –µ—Å—Ç—å JSON-–ø–æ–¥–æ–±–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞).
//
//getResultList() ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç List<Map<...>> ‚Äî —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—Ç—Ä–æ–∫ —Ç–∞–±–ª–∏—Ü—ã –≤ –≤–∏–¥–µ –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ.
//
//üü© –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
//
//json
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//[
//  { "id": 1, "etrap": "Ashgabat" },
//  { "id": 2, "etrap": "Mary" }
//]
//üì§ –ú–µ—Ç–æ–¥ save(...)
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//@Transactional
//public void save(String modelName, Map<String, Object> data) {
//    // –ü—Ä–æ—Å—Ç–µ–π—à–∞—è –≤—Å—Ç–∞–≤–∫–∞ ‚Äî –Ω—É–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
//    // –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å JPA Criteria API
//    // –∏–ª–∏ Spring Data JPA + Reflection
//}
//–≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø–æ–∫–∞ –ø—É—Å—Ç–æ–π, –Ω–æ —É–∂–µ –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ @Transactional, –∑–Ω–∞—á–∏—Ç:
//
//–í—Å—ë, —á—Ç–æ –±—É–¥–µ—Ç –≤–Ω—É—Ç—Ä–∏, –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –∫–∞–∫ –æ–¥–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è.
//
//–ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –æ—à–∏–±–∫–∞ ‚Äî –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ë–î –±—É–¥—É—Ç –æ—Ç–º–µ–Ω–µ–Ω—ã.
//
//üîí –í –±—É–¥—É—â–µ–º:
//
//–ë—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤—Å—Ç–∞–≤–∫–∞ INSERT INTO ..., –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º—É modelName –∏ data.
//
//–ù—É–∂–Ω–æ –±—É–¥–µ—Ç –±—ã—Ç—å –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã–º ‚Äî –Ω–µ–ª—å–∑—è –¥–æ–≤–µ—Ä—è—Ç—å –∫–ª–∏–µ–Ω—Ç—É, –∏–Ω–∞—á–µ –≤–æ–∑–º–æ–∂–µ–Ω SQL-–∏–Ω—ä–µ–∫—Ü–∏–æ–Ω–Ω—ã–π –≤–∑–ª–æ–º.
//
//–õ—É—á—à–µ–µ —Ä–µ—à–µ–Ω–∏–µ ‚Äî –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å JPA + Reflection –∏–ª–∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ prepared-–∑–∞–ø—Ä–æ—Å—ã.
//
//üîß –ú–µ—Ç–æ–¥ convertToTableName(...)
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//private String convertToTableName(String modelName) {
//    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º modelName –≤—Ä–æ–¥–µ "abonentservice" –≤ "abonent_service"
//    return modelName.replaceAll("([A-Z])", "_$1").toLowerCase();
//}
//üìå –ß—Ç–æ –¥–µ–ª–∞–µ—Ç:
//
//–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–º—è –º–æ–¥–µ–ª–∏ (AbonentService) –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ "abonentservice".
//
//–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏.
//
//–ü–µ—Ä–µ–≤–æ–¥–∏—Ç –≤—Å—ë –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä.
//
//üîπ –ü—Ä–∏–º–µ—Ä—ã:
//
//"Etrap" ‚Üí "etrap"
//
//"AbonentService" ‚Üí "abonent_service"
//
//"MyModelName" ‚Üí "my_model_name"
//
//–≠—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã —Å–æ–ø–æ—Å—Ç–∞–≤–∏—Ç—å –∏–º—è –º–æ–¥–µ–ª–∏ –∏ –∏–º—è —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –≤ –±–∞–∑–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∏–ª—å snake_case.
//
//üìå –í—ã–≤–æ–¥
//–ú–µ—Ç–æ–¥	–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
//findAll()	–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
//save()	–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å (–µ—â—ë –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ)
//convertToTableName()	–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –∏–º—è –º–æ–¥–µ–ª–∏ –≤ –∏–º—è —Ç–∞–±–ª–∏—Ü—ã (–≤ —Å—Ç–∏–ª–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö)
//
//üí° –ß—Ç–æ —É–ª—É—á—à–∏—Ç—å –≤ –±—É–¥—É—â–µ–º
//–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –ø—Ä–æ–≤–µ—Ä–∫–∞ modelName, whitelist –º–æ–¥–µ–ª–µ–π.
//
//–†–µ–∞–ª–∏–∑–∞—Ü–∏—è save(): –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å PreparedStatement –∏–ª–∏ Spring Data.
//
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ: –¥–æ–±–∞–≤–∏—Ç—å PUT –∏ DELETE –º–µ—Ç–æ–¥—ã.
//
//–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö: —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ JSON —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –º–æ–¥–µ–ª–∏.
//
//–•–æ—á–µ—à—å ‚Äî –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ save(...) –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ.

package com.WEAK.telekom.services;

import jakarta.persistence.EntityManager;
import jakarta.persistence.Query;
import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;

@Service
@RequiredArgsConstructor
public class GenericModelService {

    private final EntityManager entityManager;

    public List<Map<String, Object>> findAll(String modelName) {
        String tableName = convertToTableName(modelName);
        Query query = entityManager.createNativeQuery("SELECT * FROM " + tableName, Map.class);
        return query.getResultList();
    }

    @Transactional
    public void save(String modelName, Map<String, Object> data) {
        // –ü—Ä–æ—Å—Ç–µ–π—à–∞—è –≤—Å—Ç–∞–≤–∫–∞ ‚Äî –Ω—É–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        // –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å JPA Criteria API
        // –∏–ª–∏ Spring Data JPA + Reflection
    }

    private String convertToTableName(String modelName) {
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º modelName –≤—Ä–æ–¥–µ "abonentservice" –≤ "abonent_service"
        return modelName.replaceAll("([A-Z])", "_$1").toLowerCase();
    }
}
