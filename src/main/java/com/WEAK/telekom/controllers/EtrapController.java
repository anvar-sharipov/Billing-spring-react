//–ß—Ç–æ —Ç–∞–∫–æ–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –≤ Spring Boot?
//–í Spring Boot @RestController ‚Äî —ç—Ç–æ –∞–Ω–∞–ª–æ–≥ views –≤ Django. –û–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç HTTP-–∑–∞–ø—Ä–æ—Å—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç—ã.

package com.WEAK.telekom.controllers;
import com.WEAK.telekom.dto.ApiResponse;
import com.WEAK.telekom.models.Etrap;
import com.WEAK.telekom.repositories.EtrapRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;



//@Autowired –≥–æ–≤–æ—Ä–∏—Ç Spring:
//"–≠–π, Spring, –Ω–∞–π–¥–∏ –Ω—É–∂–Ω—ã–π –æ–±—ä–µ–∫—Ç (EtrapRepository) –∏ –ø–µ—Ä–µ–¥–∞–π –µ–≥–æ —Å—é–¥–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏."
//–≠—Ç–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∏–Ω—ä–µ–∫—Ü–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (Dependency Injection).
//üß† –ü–∞—Ä–∞–ª–ª–µ–ª—å —Å Django:
//–í Django —Ç—ã —è–≤–Ω–æ —Å–æ–∑–¥–∞—ë—à—å –æ–±—ä–µ–∫—Ç:
//etraps = Etrap.objects.all()
//–ê –≤ Spring —Ç—ã –≥–æ–≤–æ—Ä–∏—à—å:
//@Autowired
//private EtrapRepository etrapRepository;
//–ò Spring —Å–∞–º:
//  –Ω–∞—Ö–æ–¥–∏—Ç –∫–ª–∞—Å—Å EtrapRepository
//  —Å–æ–∑–¥–∞—ë—Ç –µ–≥–æ –æ–±—ä–µ–∫—Ç
//  –ø–µ—Ä–µ–¥–∞—ë—Ç –µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—É

//–ß—Ç–æ —Ç–∞–∫–æ–µ ResponseEntity –≤ Spring?
//ResponseEntity ‚Äî —ç—Ç–æ –∫–ª–∞—Å—Å-–æ–±—ë—Ä—Ç–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –≤–µ—Å—å HTTP-–æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –∫ –∫–ª–∏–µ–Ω—Ç—É, –≤–∫–ª—é—á–∞—è:
//–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–∞–Ω–Ω—ã–µ –≤ JSON –∏–ª–∏ —Ç–µ–∫—Å—Ç)
//HTTP —Å—Ç–∞—Ç—É—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 200 OK, 404 Not Found, 201 Created –∏ —Ç.–¥.)
//HTTP –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Content-Type, Authorization –∏ —Ç.–¥.)
//–ü—Ä–∏–º–µ—Ä:
//return ResponseEntity.status(201).body(new ApiResponse(true, "–ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞"));
//–ó–¥–µ—Å—å –º—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∏–µ–Ω—Ç—É:
//HTTP —Å—Ç–∞—Ç—É—Å 201 Created
//–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ ‚Äî –æ–±—ä–µ–∫—Ç ApiResponse
//–ê–Ω–∞–ª–æ–≥–∏—è –≤ Django
//–í Django –ø—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ API –æ–±—ã—á–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç HttpResponse –∏–ª–∏, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å Django REST Framework (DRF), —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –æ–±—ä–µ–∫—Ç—ã Response.
//–ù–∞–ø—Ä–∏–º–µ—Ä, –≤ DRF:
//from rest_framework.response import Response
//from rest_framework import status
//def create(request):
//    # ...
//    return Response({"success": True, "message": "–ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞"}, status=status.HTTP_201_CREATED)
//–ó–¥–µ—Å—å Response –∏–∑ DRF ‚Äî –∞–Ω–∞–ª–æ–≥ ResponseEntity –≤ Spring.
//–¢—ã —Ç–æ–∂–µ –º–æ–∂–µ—à—å —É–∫–∞–∑–∞—Ç—å —Ç–µ–ª–æ –∏ —Å—Ç–∞—Ç—É—Å.
//–ö—Ä–∞—Ç–∫–æ:
//Spring ResponseEntity                                 Django REST Framework Response
//–û–±—ë—Ä—Ç–∫–∞ HTTP-–æ—Ç–≤–µ—Ç–∞ —Å —Ç–µ–ª–æ–º, —Å—Ç–∞—Ç—É—Å–æ–º –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏	–û–±—ë—Ä—Ç–∫–∞ HTTP-–æ—Ç–≤–µ—Ç–∞ —Å —Ç–µ–ª–æ–º –∏ —Å—Ç–∞—Ç—É—Å–æ–º
//–ü–æ–∑–≤–æ–ª—è–µ—Ç —è–≤–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å—Ç–∞—Ç—É—Å–æ–º –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏	    –¢–æ –∂–µ —Å–∞–º–æ–µ
//–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞	            –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ DRF view-—Ñ—É–Ω–∫—Ü–∏—è—Ö

// Annotation:
//–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º, —á—Ç–æ —Ç–∞–∫–æ–µ –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è –≤ Java (–∏ Spring), –∏ –∫–∞–∫ —ç—Ç–æ –º–æ–∂–Ω–æ —Å—Ä–∞–≤–Ω–∏—Ç—å —Å Django.
//–ß—Ç–æ —Ç–∞–∫–æ–µ –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è (annotation) –≤ Java / Spring?
//–ê–Ω–Ω–æ—Ç–∞—Ü–∏—è ‚Äî —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–µ—Ç–∞-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–ª—è–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫ –∫–æ–¥—É. –ü–æ —Å—É—Ç–∏, —ç—Ç–æ –∫–∞–∫ "—Ç–µ–≥–∏" –∏–ª–∏ "–º–∞—Ä–∫–∏—Ä–æ–≤–∫–∏" –Ω–∞–¥ –∫–ª–∞—Å—Å–∞–º–∏, –º–µ—Ç–æ–¥–∞–º–∏ –∏–ª–∏ –ø–æ–ª—è–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –≥–æ–≤–æ—Ä—è—Ç —Ñ—Ä–µ–π–º–≤–æ—Ä–∫—É (Spring), –∫–∞–∫ —Å —ç—Ç–∏–º –∫–æ–¥–æ–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è.
//–ê–Ω–Ω–æ—Ç–∞—Ü–∏–∏ –æ–±—ã—á–Ω–æ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å @ –∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è:
//–ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–º–µ—Ç–∏—Ç—å –∫–ª–∞—Å—Å –∫–∞–∫ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä)
//–£–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–∞–∫–æ–π HTTP –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –≤—ã–∑—ã–≤–∞—Ç—å –º–µ—Ç–æ–¥)
//–í–Ω–µ–¥—Ä–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è—Ç—å –Ω—É–∂–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã)
//–ò –º–Ω–æ–≥–æ–≥–æ –¥—Ä—É–≥–æ–≥–æ
//–ü—Ä–∏–º–µ—Ä—ã –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π –∏–∑ org.springframework.web.bind.annotation.*
//@RestController ‚Äî –≥–æ–≤–æ—Ä–∏—Ç Spring, —á—Ç–æ –∫–ª–∞—Å—Å ‚Äî —ç—Ç–æ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ HTTP –∑–∞–ø—Ä–æ—Å–æ–≤, –∏ —á—Ç–æ –º–µ—Ç–æ–¥—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –¥–∞–Ω–Ω—ã–µ (–æ–±—ã—á–Ω–æ JSON).
//@RequestMapping ‚Äî –∑–∞–¥–∞—ë—Ç –±–∞–∑–æ–≤—ã–π URL –ø—É—Ç—å –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –∏–ª–∏ –º–µ—Ç–æ–¥–∞.
//@GetMapping, @PostMapping, @PutMapping, @DeleteMapping ‚Äî –æ–±–æ–∑–Ω–∞—á–∞—é—Ç, —á—Ç–æ –º–µ—Ç–æ–¥ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç HTTP GET, POST, PUT, DELETE –∑–∞–ø—Ä–æ—Å—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.
//@PathVariable ‚Äî —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä –º–µ—Ç–æ–¥–∞ –±–µ—Ä—ë—Ç—Å—è –∏–∑ —á–∞—Å—Ç–∏ URL (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ /users/{id}).
//@RequestBody ‚Äî –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä –º–µ—Ç–æ–¥–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω –∏–∑ —Ç–µ–ª–∞ HTTP –∑–∞–ø—Ä–æ—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, JSON).
//–ê–Ω–∞–ª–æ–≥–∏—è —Å Django
//–í Django (–æ—Å–æ–±–µ–Ω–Ω–æ –≤ –∫–ª–∞—Å—Å–∞—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π –∏–ª–∏ –≤ Django REST Framework) –ø–æ—Ö–æ–∂—É—é —Ä–æ–ª—å –∏–≥—Ä–∞—é—Ç –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã –∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–ª–∞—Å—Å—ã:
//–î–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã @api_view(['GET']), @api_view(['POST']) –≤ DRF ‚Äî –∞–Ω–∞–ª–æ–≥ @GetMapping, @PostMapping
//–ö–ª–∞—Å—Å—ã-–Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∏ APIView, –≥–¥–µ –º–µ—Ç–æ–¥—ã get(), post() –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ HTTP –º–µ—Ç–æ–¥—ã ‚Äî –ø–æ—Ö–æ–∂–∏ –Ω–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã —Å –º–µ—Ç–æ–¥–∞–º–∏ —Å –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è–º–∏ –≤ Spring.
//–í Django –¥–ª—è URL-–ø—É—Ç–µ–π –æ–±—ã—á–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ñ–∞–π–ª urls.py, –≥–¥–µ –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫–æ–π view –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∫–∞–∫–æ–π –ø—É—Ç—å ‚Äî –≤ Spring —ç—Ç–æ —á–∞—Å—Ç–æ –∑–∞–¥–∞—ë—Ç—Å—è —á–µ—Ä–µ–∑ –∞–Ω–Ω–æ—Ç–∞—Ü–∏—é @RequestMapping –∏ –ø–æ—Ö–æ–∂–∏–µ.
//–ü—Ä–∏–º–µ—Ä –≤ Django:
//from rest_framework.decorators import api_view
//from rest_framework.response import Response
//@api_view(['GET'])
//def get_all_etraps(request):
//    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ GET –∑–∞–ø—Ä–æ—Å–∞
//    return Response({"message": "–°–ø–∏—Å–æ–∫ —ç—Ç—Ä–∞–ø–æ–≤"})
//–ó–¥–µ—Å—å @api_view(['GET']) ‚Äî —ç—Ç–æ –∫–∞–∫ @GetMapping –≤ Spring.
//–ö—Ä–∞—Ç–∫–æ:
//Spring –ê–Ω–Ω–æ—Ç–∞—Ü–∏–∏ (@)	                        Django (DRF) –î–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã –∏ –∫–ª–∞—Å—Å—ã
//@RestController ‚Äî –∫–ª–∞—Å—Å –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞	        –ö–ª–∞—Å—Å-–Ω–∞—Å–ª–µ–¥–Ω–∏–∫ APIView
//@GetMapping("/path") ‚Äî –º–µ—Ç–æ–¥ –¥–ª—è GET –∑–∞–ø—Ä–æ—Å–∞	@api_view(['GET']) ‚Äî —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è GET –∑–∞–ø—Ä–æ—Å–∞
//@RequestBody ‚Äî —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä –º–µ—Ç–æ–¥–∞	–ü–∞—Ä–∞–º–µ—Ç—Ä request.data –≤ Django
//@PathVariable ‚Äî —á–∞—Å—Ç—å –ø—É—Ç–∏ URL –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä	–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL –≤ Django —á–µ—Ä–µ–∑ urls.py –∏ view
//–ü–æ—á–µ–º—É –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ –≤–∞–∂–Ω—ã?
//–û–Ω–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç —Å–¥–µ–ª–∞—Ç—å –∫–æ–¥:
//–ë–æ–ª–µ–µ —á–∏—Ç–∞–µ–º—ã–º (–≤–∏–¥–Ω–æ —Å—Ä–∞–∑—É, —á—Ç–æ –∑–∞ –º–µ—Ç–æ–¥ –∏ –∫–∞–∫ –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
//–£–ø—Ä–æ—â–∞—é—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
//–£–±–∏—Ä–∞—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –ø–∏—Å–∞—Ç—å –º–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ –≤—Ä—É—á–Ω—É—é

@RestController
@RequestMapping("/api/models/etrap")
@CrossOrigin(origins="*")
public class EtrapController {

    @Autowired
    private EtrapRepository etrapRepository;

//    List ‚Äî —ç—Ç–æ —Å–ø–∏—Å–æ–∫ –≤ Java, —Ç–æ –µ—Å—Ç—å —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
//    <Etrap> ‚Äî –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ —ç—Ç–æ —Å–ø–∏—Å–æ–∫ –∏–º–µ–Ω–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤ —Ç–∏–ø–∞ Etrap.
//    –¢–∞–∫ Java —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –≤–Ω—É—Ç—Ä–∏ —Å–ø–∏—Å–∫–∞ –±—É–¥—É—Ç –∏–º–µ–Ω–Ω–æ –æ–±—ä–µ–∫—Ç—ã –∫–ª–∞—Å—Å–∞ Etrap.
    @GetMapping
    public List<Etrap> getAll() {
        return etrapRepository.findAll();
    }

//      –ß—Ç–æ —Ç–∞–∫–æ–µ ResponseEntity<ApiResponse>?
//      ResponseEntity ‚Äî —ç—Ç–æ –æ–±—ë—Ä—Ç–∫–∞ –¥–ª—è HTTP-–æ—Ç–≤–µ—Ç–∞ –≤ Spring.
//      –í –Ω–µ–π –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å:
//          HTTP —Å—Ç–∞—Ç—É—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 200 OK, 201 Created, 404 Not Found –∏ —Ç.–¥.)
//          –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ (headers)
//          –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (body)
//      –ü–∞—Ä–∞–º–µ—Ç—Ä <ApiResponse> ‚Äî —ç—Ç–æ —Ç–∏–ø —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ, —Ç–µ–ª–æ –±—É–¥–µ—Ç –æ–±—ä–µ–∫—Ç–æ–º –∫–ª–∞—Å—Å–∞ ApiResponse, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –Ω–∞–ø–∏—Å–∞–ª —Ä–∞–Ω–µ–µ.
//    –ß—Ç–æ –¥–µ–ª–∞–µ—Ç —ç—Ç–æ—Ç –º–µ—Ç–æ–¥?
//      1) @PostMapping ‚Äî –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç HTTP POST-–∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –ø—É—Ç—å /api/etraps.
//      2) @RequestBody Etrap etrap ‚Äî Spring –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±–µ—Ä–µ—Ç JSON –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –µ–≥–æ –≤ –æ–±—ä–µ–∫—Ç Etrap.
//          (–ê–Ω–∞–ª–æ–≥ –≤ Django: –≤—å—é—à–∫–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç JSON –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤ –æ–±—ä–µ–∫—Ç –º–æ–¥–µ–ª–∏.)
//      3) etrapRepository.save(etrap) ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç (—Å ID –∏ —Ç.–¥.).
//      4) ResponseEntity.status(201).body(...) ‚Äî —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç HTTP-–æ—Ç–≤–µ—Ç:
//          —Å—Ç–∞—Ç—É—Å 201 ‚Äî –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Ä–µ—Å—É—Ä—Å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω;
//          —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ ‚Äî –æ–±—ä–µ–∫—Ç ApiResponse —Å –ø–æ–ª—è–º–∏:
//              success = true
//              message = "–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞"
//              data = —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç saved (—á—Ç–æ–±—ã –∫–ª–∏–µ–Ω—Ç –ø–æ–ª—É—á–∏–ª –¥–∞–Ω–Ω—ã–µ –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏)
//    –ê–Ω–∞–ª–æ–≥ –≤ Django REST Framework
//      from rest_framework.response import Response
//      from rest_framework import status
//
//      @api_view(['POST'])
//      def create_etrap(request):
//          serializer = EtrapSerializer(data=request.data)
//          if serializer.is_valid():
//              saved = serializer.save()
//              return Response({
//                  'success': True,
//                  'message': '–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞',
//                  'data': serializer.data,
//              }, status=status.HTTP_201_CREATED)
//          return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
//    –¢–∞–º —Ç–æ–∂–µ —Å–æ–∑–¥–∞—ë—Ç—Å—è –æ—Ç–≤–µ—Ç —Å –Ω—É–∂–Ω—ã–º —Å—Ç–∞—Ç—É—Å–æ–º –∏ —Ç–µ–ª–æ–º.
//    –í Spring —ç—Ç–æ ResponseEntity<ApiResponse>, –≤ Django ‚Äî Response({...}, status=...).
//    –ö—Ä–∞—Ç–∫–æ:
//      ResponseEntity<ApiResponse> ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ç–µ–±–µ –≤–µ—Ä–Ω—É—Ç—å –∏ —Ç–µ–ª–æ, –∏ HTTP —Å—Ç–∞—Ç—É—Å, –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ.
//      –í —Ç–µ–ª–µ —Ç—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ—à—å —É–¥–æ–±–Ω—ã–π –æ–±—ä–µ–∫—Ç ApiResponse, —á—Ç–æ–±—ã –∫–ª–∏–µ–Ω—Ç –∑–Ω–∞–ª, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –∏ –ø–æ–ª—É—á–∏–ª –¥–∞–Ω–Ω—ã–µ.
//      HTTP —Å—Ç–∞—Ç—É—Å 201 ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–∞.
    @PostMapping
    public ResponseEntity<ApiResponse> create(@RequestBody Etrap etrap) {
        Etrap saved = etrapRepository.save(etrap);
        return ResponseEntity.status(201).body(new ApiResponse(true, "–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞", saved));
    }

//    –ß—Ç–æ –¥–µ–ª–∞–µ—Ç ResponseEntity.ok(...)?
//    –≠—Ç–æ –∫–æ—Ä–æ—Ç–∫–∞—è –∑–∞–ø–∏—Å—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è HTTP-–æ—Ç–≤–µ—Ç–∞ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 200 OK –∏ —Ç–µ–ª–æ–º, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã –ø–µ—Ä–µ–¥–∞—ë—à—å –≤–Ω—É—Ç—Ä—å.
//    –¢–æ –µ—Å—Ç—å:
//    ResponseEntity.ok(body)
//    —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω–æ:
//    ResponseEntity.status(200).body(body)

//    a new ApiResponse(true, "–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞")
//     —ç—Ç–æ —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞, —Ç–æ –µ—Å—Ç—å –æ–±—ã—á–Ω—ã–π –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Ö–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å –∫–ª–∏–µ–Ω—Ç—É. –ê ResponseEntity.ok(...) –≥–æ–≤–æ—Ä–∏—Ç Spring-—É:
//    –í–µ—Ä–Ω–∏ —ç—Ç–æ—Ç –æ–±—ä–µ–∫—Ç, –∏ –ø–æ—Å—Ç–∞–≤—å HTTP —Å—Ç–∞—Ç—É—Å 200 OK.
//    –ê–Ω–∞–ª–æ–≥ –≤ Django REST Framework
//    return Response({
//      'success': True,
//      'message': '–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞'
//    }, status=200)
//    –í Django —Ç—ã —è–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ—à—å status=200, –∞ –≤ Spring –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å .ok(...) –∫–∞–∫ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ.
    @DeleteMapping("/{id}")
    public ResponseEntity<ApiResponse> delete(@PathVariable Long id) {
        if (etrapRepository.existsById(id)) {
            etrapRepository.deleteById(id);
            return ResponseEntity.ok(new ApiResponse(true, "–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞"));
        } else {
            return ResponseEntity.status(404).body(new ApiResponse(false, "–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"));
        }
    }

//    –¶–µ–ª—å –º–µ—Ç–æ–¥–∞:
//    –û–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–ø–∏—Å—å Etrap –ø–æ –µ—ë id.
//    üîç –ê–Ω–Ω–æ—Ç–∞—Ü–∏—è @PutMapping("/{id}")
//    –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç:
//      1) –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç HTTP PUT-–∑–∞–ø—Ä–æ—Å –ø–æ –∞–¥—Ä–µ—Å—É /api/etraps/{id}
//      2) {id} ‚Äî —ç—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –∏–∑ URL. –ü—Ä–∏–º–µ—Ä: /api/etraps/5
//    üìå –ê–Ω–∞–ª–æ–≥ –≤ Django:
//      @api_view(['PUT'])
//      def update_etrap(request, id):
//    üí° –ê—Ä–≥—É–º–µ–Ω—Ç—ã –º–µ—Ç–æ–¥–∞
//    public ResponseEntity<ApiResponse> update(
//      @PathVariable Long id,
//      @RequestBody Etrap updatedEtrap
//    )
//    üîπ @PathVariable Long id
//    ‚Äì –ó–Ω–∞—á–µ–Ω–∏–µ id –±–µ—Ä—ë—Ç—Å—è –∏–∑ URL, –Ω–∞–ø—Ä–∏–º–µ—Ä /api/etraps/5 ‚Üí id = 5
//    üìå Django –∞–Ω–∞–ª–æ–≥:
//    def update_etrap(request, id):
//    üîπ @RequestBody Etrap updatedEtrap
//    ‚Äì –í–µ—Å—å JSON –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –≤ –æ–±—ä–µ–∫—Ç Etrap
//    üìå Django –∞–Ω–∞–ª–æ–≥:
//    data = request.data
//    ‚öôÔ∏è –í—Å—è –ª–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
//      return etrapRepository.findById(id).map(etrap -> {
//      1) etrapRepository.findById(id) ‚Äî –Ω–∞–π—Ç–∏ –∑–∞–ø–∏—Å—å –ø–æ id
//      2) .map(etrap -> { ... }) ‚Äî –µ—Å–ª–∏ –∑–∞–ø–∏—Å—å –Ω–∞–π–¥–µ–Ω–∞, –≤—ã–ø–æ–ª–Ω—è–µ–º –ª—è–º–±–¥—É (–∞–Ω–æ–Ω–∏–º–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é)
//      3) etrap ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—à–ª–∏ –≤ –ë–î
//    üìå Django –∞–Ω–∞–ª–æ–≥:
//      try:
//          etrap = Etrap.objects.get(pk=id)
//      except Etrap.DoesNotExist:
//          return Response({"success": False, "message": "–ù–µ –Ω–∞–π–¥–µ–Ω–æ"}, status=404)
//    üîÅ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π
//    etrap.setEtrap(updatedEtrap.getEtrap());
//    ‚Äì –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ etrap –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
//    etrapRepository.save(etrap);
//    ‚Äì –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –≤ –±–∞–∑—É
//    üìå Django –∞–Ω–∞–ª–æ–≥:
//      etrap.name = data['etrap']
//      etrap.save()
//    ‚ùå –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏—Ç—É–∞—Ü–∏–∏, –µ—Å–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
//      .orElseGet(() ->
//          ResponseEntity.status(404).body(new ApiResponse(false, "–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"))
//      );
//    ‚Äì –ï—Å–ª–∏ findById(id) –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à—ë–ª, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –æ—Ç–≤–µ—Ç —Å HTTP 404 Not Found –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
//    üìå Django –∞–Ω–∞–ª–æ–≥:
//      except Etrap.DoesNotExist:
//          return Response({"success": False, "message": "–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"}, status=404)
//    üß† –ö—Ä–∞—Ç–∫–æ:
//      –ß–∞—Å—Ç—å Java Spring                   	–ê–Ω–∞–ª–æ–≥ Django REST Framework
//      @PutMapping("/{id}")	                @api_view(['PUT']) + def view(id)
//      @PathVariable Long id	                def view(request, id)
//      @RequestBody Etrap updatedEtrap	        data = request.data
//      findById(id).map(...).orElseGet(...)	try: ... except DoesNotExist
//      ResponseEntity.ok(...)/status(...)	    Response(..., status=...)
    @PutMapping("/{id}")
    public ResponseEntity<ApiResponse> update(@PathVariable Long id, @RequestBody Etrap updatedEtrap) {
        return etrapRepository.findById(id).map(etrap -> {
            etrap.setEtrap(updatedEtrap.getEtrap());
            etrapRepository.save(etrap);
            return ResponseEntity.ok(new ApiResponse(true, "–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω", etrap));
        }).orElseGet(() -> ResponseEntity.status(404).body(new ApiResponse(false, "–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")));
    }
}


