// wywod w side bar imena wseh tablis
//–†–∞–∑–±–µ—Ä—ë–º –ø–æ–¥—Ä–æ–±–Ω–æ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —ç—Ç–æ–º Java-–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ ModelController, —Å—Ç—Ä–æ–∫–∞ –∑–∞ —Å—Ç—Ä–æ–∫–æ–π:
//
//üì¶ –ü–∞–∫–µ—Ç –∏ –∏–º–ø–æ—Ä—Ç—ã:
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//package com.WEAK.telekom.controllers;
//–£–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –∫–ª–∞—Å—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–∫–µ—Ç–µ com.WEAK.telekom.controllers.
//
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.web.bind.annotation.*;
//import javax.sql.DataSource;
//import java.sql.*;
//import java.util.ArrayList;
//import java.util.List;
//–ò–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ Spring (–Ω–∞–ø—Ä–∏–º–µ—Ä, @RestController, @GetMapping) –∏ –∫–ª–∞—Å—Å—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö (DataSource, Connection, DatabaseMetaData, ResultSet –∏ —Ç.–¥.).
//
//üîß –ö–ª–∞—Å—Å –∏ –ø–æ–ª—è:
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//@RestController
//public class ModelController {
//–ê–Ω–Ω–æ—Ç–∞—Ü–∏—è @RestController —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —ç—Ç–æ—Ç –∫–ª–∞—Å—Å ‚Äî REST API –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä. –û–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON-–æ—Ç–≤–µ—Ç—ã.
//
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//    @Autowired
//    private DataSource dataSource;
//@Autowired –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–Ω–µ–¥—Ä—è–µ—Ç –æ–±—ä–µ–∫—Ç DataSource, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
//
//DataSource ‚Äî —ç—Ç–æ –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π (connection pool), –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –±–µ—Ä—ë—Ç—Å—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î.
//
//üöÄ –ú–µ—Ç–æ–¥ getTables:
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//    @GetMapping("/api/models")
//    @CrossOrigin(origins="*")
//    public List<String> getTables() {
//–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç HTTP GET-–∑–∞–ø—Ä–æ—Å—ã –ø–æ –∞–¥—Ä–µ—Å—É /api/models.
//
//@CrossOrigin(origins="*") ‚Äî —Ä–∞–∑—Ä–µ—à–∞–µ—Ç –∫—Ä–æ—Å—Å-–¥–æ–º–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã (CORS), —á—Ç–æ–±—ã —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –º–æ–≥ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –±—ç–∫–µ–Ω–¥—É.
//
//–ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–º—ë–Ω –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (—Ç–∏–ø List<String>).
//
//üîÑ –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞:
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//        List<String> tables = new ArrayList<>();
//        try (Connection connection = dataSource.getConnection()) {
//–°–æ–∑–¥–∞—ë—Ç—Å—è –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ tables, –∫—É–¥–∞ –º—ã –±—É–¥–µ–º –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü.
//
//–ë–µ—Ä—ë–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∏–∑ DataSource.
//
//üìä –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ë–î:
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//            DatabaseMetaData metaData = connection.getMetaData();
//            String[] types = {"TABLE"};
//–ò–∑ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø–æ–ª—É—á–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ë–î (metaData), –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞–±–ª–∏—Ü–∞—Ö, –∫–æ–ª–æ–Ω–∫–∞—Ö, –∏–Ω–¥–µ–∫—Å–∞—Ö –∏ —Ç.–¥.
//
//–¢–∏–ø—ã –æ–±—ä–µ–∫—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç ‚Äî —Ç–æ–ª—å–∫–æ —Ç–∞–±–ª–∏—Ü—ã (–∞ –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è, –∏–Ω–¥–µ–∫—Å—ã –∏ —Ç.–¥.).
//
//üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–∞–±–ª–∏—Ü:
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//            ResultSet rs = metaData.getTables(connection.getCatalog(), "public", "%", types);
//getTables(...) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –≤ —Å—Ö–µ–º–µ public (–∞–∫—Ç—É–∞–ª—å–Ω–æ –¥–ª—è PostgreSQL).
//
//connection.getCatalog() ‚Äî –∏–º—è –±–∞–∑—ã (–æ–±—ã—á–Ω–æ –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å null).
//
//"%" ‚Äî —à–∞–±–ª–æ–Ω, –æ–∑–Ω–∞—á–∞–µ—Ç "–≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã".
//
//types ‚Äî —Ç–æ–ª—å–∫–æ TABLE.
//
//üì• –î–æ–±–∞–≤–ª—è–µ–º –∏–º–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü –≤ —Å–ø–∏—Å–æ–∫:
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//            while (rs.next()) {
//                String tableName = rs.getString("TABLE_NAME");
//                tables.add(tableName);
//            }
//            rs.close();
//–ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –∫–∞–∂–¥–æ–π —Ç–∞–±–ª–∏—Ü—ã, –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ tables.
//
//‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫:
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –ë–î), –æ–Ω–æ –ø–µ—á–∞—Ç–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å.
//
//üì§ –í–æ–∑–≤—Ä–∞—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:
//java
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//        return tables;
//    }
//}
//–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ –∏–º—ë–Ω —Ç–∞–±–ª–∏—Ü. –ù–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ —Ç—ã –µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å, —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ /admin/models/{–Ω–∞–∑–≤–∞–Ω–∏–µ_—Ç–∞–±–ª–∏—Ü—ã}.
//
//üîö –ü—Ä–∏–º–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞:
//–ï—Å–ª–∏ –≤ –±–∞–∑–µ –µ—Å—Ç—å —Ç–∞–±–ª–∏—Ü—ã etrap, abonent_service, —Ç–æ GET-–∑–∞–ø—Ä–æ—Å –Ω–∞ /api/models –≤–µ—Ä–Ω—ë—Ç:
//
//json
//–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
//["etrap", "abonent_service"]
//–•–æ—á–µ—à—å ‚Äî –º–æ–≥—É –æ–±—ä—è—Å–Ω–∏—Ç—å, –∫–∞–∫ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ –¥—Ä—É–≥—É—é –°–£–ë–î (–Ω–∞–ø—Ä–∏–º–µ—Ä, MySQL), –∏–ª–∏ –∫–∞–∫ –∏—Å–∫–ª—é—á–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã.

package com.WEAK.telekom.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import javax.sql.DataSource;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

@RestController
public class ModelController {

    @Autowired
    private DataSource dataSource;

    @GetMapping("/api/models")
    @CrossOrigin(origins="*")
    public List<String> getTables() {
        List<String> tables = new ArrayList<>();
        try (Connection connection = dataSource.getConnection()) {
            DatabaseMetaData metaData = connection.getMetaData();

            // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã, —Ç–∏–ø ‚Äî "TABLE"
            String[] types = {"TABLE"};

            // catalog –∏ schemaPattern –º–æ–∂–µ—à—å –∑–∞–º–µ–Ω–∏—Ç—å –ø–æ–¥ —Å–≤–æ—é –°–£–ë–î –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å null
            ResultSet rs = metaData.getTables(connection.getCatalog(), "public", "%", types);

            while (rs.next()) {
                String tableName = rs.getString("TABLE_NAME");
                tables.add(tableName);
            }
            rs.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
        return tables;
    }
}
